{"ast":null,"code":"var _jsxFileName = \"/Users/JV/react/front-end-playback/src/components/playback.jsx\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport DatePicker from \"./datePicker\";\nimport Button from \"./button\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\n\nclass Playback extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobs: [],\n      message: [],\n      text: \"Play\",\n      currentPage: 1,\n      pageSize: 4\n    };\n    this.capture = {\n      jobName: \"\",\n      startTime: 0,\n      endTime: 0\n    };\n\n    this.changeText = text => {\n      this.setState({\n        text\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: jobs\n    } = await Axios.get(\"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/capture/jobs\");\n    this.setState({\n      jobs\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.jobs;\n    const {\n      text\n    } = this.state;\n    const captureTraffic = paginate(this.state.jobs, currentPage, pageSize);\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, \"There are no job in the database.\");\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-light border rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-info text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \" \", \"Showing \", count, \" available playback jobs in the database.\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Capture Jobs\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Start Date & Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"End Date & Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Playback\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.state.jobs.map(job => /*#__PURE__*/React.createElement(\"tr\", {\n      key: job.jobID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, job.jobName), /*#__PURE__*/React.createElement(Button, {\n      id: job.jobName,\n      label: \"Play\",\n      text: this.state.text,\n      jobName: job.jobName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: this.state.jobs.length,\n      pageSize: this.state.pageSize,\n      currentPage: this.state.currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Playback;","map":{"version":3,"sources":["/Users/JV/react/front-end-playback/src/components/playback.jsx"],"names":["React","Component","Axios","DatePicker","Button","Pagination","paginate","Playback","state","jobs","message","text","currentPage","pageSize","capture","jobName","startTime","endTime","changeText","setState","handlePageChange","page","componentDidMount","data","get","render","length","count","captureTraffic","map","job","jobID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport DatePicker from \"./datePicker\";\nimport Button from \"./button\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\n\nclass Playback extends Component {\n  state = {\n    jobs: [],\n    message: [],\n    text: \"Play\",\n    currentPage: 1,\n    pageSize: 4,\n  };\n\n  capture = {\n    jobName: \"\",\n    startTime: 0,\n    endTime: 0,\n  };\n\n  changeText = (text) => {\n    this.setState({ text });\n  };\n\n  async componentDidMount() {\n    const { data: jobs } = await Axios.get(\n      \"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/capture/jobs\"\n    );\n\n    this.setState({ jobs });\n  }\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { length: count } = this.state.jobs;\n    const { text } = this.state;\n\n    const captureTraffic = paginate(this.state.jobs, currentPage, pageSize);\n\n    if (count === 0) return <p>There are no job in the database.</p>;\n\n    return (\n      <React.Fragment>\n        <div className=\"bg-light border rounded\">\n          <br />\n          <p className=\"text-info text-center\">\n            {\" \"}\n            Showing {count} available playback jobs in the database.\n          </p>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Capture Jobs</th>\n                <th>Start Date & Time</th>\n                <th>End Date & Time</th>\n                <th>Playback</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.jobs.map((job) => (\n                <tr key={job.jobID}>\n                  <td>{job.jobName}</td>\n\n                  <Button\n                    id={job.jobName}\n                    label=\"Play\"\n                    text={this.state.text}\n                    jobName={job.jobName}\n                  />\n                </tr>\n              ))}\n              <Pagination\n                itemsCount={this.state.jobs.length}\n                pageSize={this.state.pageSize}\n                currentPage={this.state.currentPage}\n                onPageChange={this.handlePageChange}\n              />\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Playback;\n"]},"metadata":{},"sourceType":"module"}