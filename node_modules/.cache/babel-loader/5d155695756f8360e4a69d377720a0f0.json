{"ast":null,"code":"var _jsxFileName = \"/Users/JV/react/front-end-playback/src/components/doughnutChart.jsx\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from \"axios\";\nconst doughnut = {\n  labels: [\"GET\", \"POST\", \"HEAD\"],\n  datasets: [{\n    data: [],\n    backgroundColor: [\"#5bc0de\", \"#d9534f\", \"#5cb85c\"]\n  }],\n  legend: {\n    position: \"bottom\"\n  }\n};\n\nfunction addDataSet(chart, data) {\n  for (const key of data) {\n    console.log(key);\n  } //chart.update();\n\n}\n\nclass DoughnutChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      captureDomains: \"\",\n      getRequest: 0,\n      postRequest: 0,\n      headRequest: 0,\n      data: [0, 0, 0]\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: captureDomains\n    } = await Axios.get(\"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/play\");\n    this.setState({\n      captureDomains\n    });\n    captureDomains.forEach(element => {\n      if (element.method === \"GET\") ++this.state.getRequest;else if (element.method === \"POST\") ++this.state.postRequest;else if (element.method === \"HEAD\") ++this.state.headRequest;\n    });\n    this.setState({\n      data: [this.state.getRequest, this.state.postRequest, this.state.headRequest]\n    });\n    addDataSet(doughnut, this.state.data);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"text-muted text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Methods\")), /*#__PURE__*/React.createElement(Doughnut, {\n      doughnut: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/Users/JV/react/front-end-playback/src/components/doughnutChart.jsx"],"names":["React","Doughnut","Axios","doughnut","labels","datasets","data","backgroundColor","legend","position","addDataSet","chart","key","console","log","DoughnutChart","Component","state","captureDomains","getRequest","postRequest","headRequest","componentDidMount","get","setState","forEach","element","method","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CADO;AAEfC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAFnB,GADQ,CAFK;AAQfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ;AARO,CAAjB;;AAaA,SAASC,UAAT,CAAoBC,KAApB,EAA2BL,IAA3B,EAAiC;AAC/B,OAAK,MAAMM,GAAX,IAAkBN,IAAlB,EAAwB;AACtBO,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAH8B,CAI/B;;AACD;;AAED,MAAMG,aAAN,SAA4Bf,KAAK,CAACgB,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,UAAU,EAAE,CAFN;AAGNC,MAAAA,WAAW,EAAE,CAHP;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNf,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AALA,KADkC;AAAA;;AAS1C,QAAMgB,iBAAN,GAA0B;AACxB,UAAM;AAAEhB,MAAAA,IAAI,EAAEY;AAAR,QAA2B,MAAMhB,KAAK,CAACqB,GAAN,CACrC,iEADqC,CAAvC;AAGA,SAAKC,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACAA,IAAAA,cAAc,CAACO,OAAf,CAAwBC,OAAD,IAAa;AAClC,UAAIA,OAAO,CAACC,MAAR,KAAmB,KAAvB,EAA8B,EAAE,KAAKV,KAAL,CAAWE,UAAb,CAA9B,KACK,IAAIO,OAAO,CAACC,MAAR,KAAmB,MAAvB,EAA+B,EAAE,KAAKV,KAAL,CAAWG,WAAb,CAA/B,KACA,IAAIM,OAAO,CAACC,MAAR,KAAmB,MAAvB,EAA+B,EAAE,KAAKV,KAAL,CAAWI,WAAb;AACrC,KAJD;AAKA,SAAKG,QAAL,CAAc;AACZlB,MAAAA,IAAI,EAAE,CACJ,KAAKW,KAAL,CAAWE,UADP,EAEJ,KAAKF,KAAL,CAAWG,WAFP,EAGJ,KAAKH,KAAL,CAAWI,WAHP;AADM,KAAd;AAOAX,IAAAA,UAAU,CAACP,QAAD,EAAW,KAAKc,KAAL,CAAWX,IAAtB,CAAV;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,KAAK,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEtB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAtCyC;;AAyC5C,eAAeS,aAAf","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Axios from \"axios\";\n\nconst doughnut = {\n  labels: [\"GET\", \"POST\", \"HEAD\"],\n  datasets: [\n    {\n      data: [],\n      backgroundColor: [\"#5bc0de\", \"#d9534f\", \"#5cb85c\"],\n    },\n  ],\n  legend: {\n    position: \"bottom\",\n  },\n};\n\nfunction addDataSet(chart, data) {\n  for (const key of data) {\n    console.log(key);\n  }\n  //chart.update();\n}\n\nclass DoughnutChart extends React.Component {\n  state = {\n    captureDomains: \"\",\n    getRequest: 0,\n    postRequest: 0,\n    headRequest: 0,\n    data: [0, 0, 0],\n  };\n\n  async componentDidMount() {\n    const { data: captureDomains } = await Axios.get(\n      \"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/play\"\n    );\n    this.setState({ captureDomains });\n    captureDomains.forEach((element) => {\n      if (element.method === \"GET\") ++this.state.getRequest;\n      else if (element.method === \"POST\") ++this.state.postRequest;\n      else if (element.method === \"HEAD\") ++this.state.headRequest;\n    });\n    this.setState({\n      data: [\n        this.state.getRequest,\n        this.state.postRequest,\n        this.state.headRequest,\n      ],\n    });\n    addDataSet(doughnut, this.state.data);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h3>\n          <p class=\"text-muted text-center\">Methods</p>\n        </h3>\n        <Doughnut doughnut={data} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DoughnutChart;\n"]},"metadata":{},"sourceType":"module"}