{"ast":null,"code":"var _jsxFileName = \"/Users/JV/react/front-end-playback/src/components/playback.jsx\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport DatePicker from \"./datePicker\";\nimport Button from \"./button\";\n\nclass Playback extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobs: [],\n      message: [],\n      text: \"Play\"\n    };\n    this.capture = {\n      jobName: \"\",\n      startTime: 0,\n      endTime: 0\n    };\n\n    this.changeText = text => {\n      this.setState({\n        text\n      });\n    };\n\n    this.handleDelete = job => {\n      const jobs = this.state.jobs.filter(m => m._id !== job._id);\n      this.setState({\n        jobs\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: jobs\n    } = await Axios.get(\"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/capture/jobs\");\n    this.setState({\n      jobs\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.jobs;\n    const {\n      text\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"There are no job in the database.\");\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \" \", \"Showing \", count, \" available playback jobs in the database.\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Job Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Start Date & Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"End Date & Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Playback\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, this.state.jobs.map(job => /*#__PURE__*/React.createElement(\"tr\", {\n      key: job.jobID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, job.jobName), /*#__PURE__*/React.createElement(Button, {\n      id: job.jobName,\n      label: \"Play\",\n      text: this.state.text,\n      jobName: job.jobName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default Playback;","map":{"version":3,"sources":["/Users/JV/react/front-end-playback/src/components/playback.jsx"],"names":["React","Component","Axios","DatePicker","Button","Playback","state","jobs","message","text","capture","jobName","startTime","endTime","changeText","setState","handleDelete","job","filter","m","_id","componentDidMount","data","get","render","length","count","map","jobID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADuB;AAAA,SAO/BC,OAP+B,GAOrB;AACRC,MAAAA,OAAO,EAAE,EADD;AAERC,MAAAA,SAAS,EAAE,CAFH;AAGRC,MAAAA,OAAO,EAAE;AAHD,KAPqB;;AAAA,SAa/BC,UAb+B,GAajBL,IAAD,IAAU;AACrB,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAf8B;;AAAA,SAyB/BO,YAzB+B,GAyBfC,GAAD,IAAS;AACtB,YAAMV,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBW,MAAhB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,GAAG,CAACG,GAA5C,CAAb;AACA,WAAKL,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KA5B8B;AAAA;;AAiB/B,QAAMc,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA,IAAI,EAAEf;AAAR,QAAiB,MAAML,KAAK,CAACqB,GAAN,CAC3B,yEAD2B,CAA7B;AAIA,SAAKR,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd;AACD;;AAODiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAM,EAAEC;AAAV,QAAoB,KAAKpB,KAAL,CAAWC,IAArC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AAEA,QAAIoB,KAAK,KAAK,CAAd,EAAiB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AAEjB,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,cAEWA,KAFX,8CADF,eAKE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAqBV,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACW,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,GAAG,CAACN,OAAT,CADF,eAGE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEM,GAAG,CAACN,OADV;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWG,IAHnB;AAIE,MAAA,OAAO,EAAEQ,GAAG,CAACN,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADD,CADH,CATF,CALF,CADF;AAgCD;;AApE8B;;AAuEjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport DatePicker from \"./datePicker\";\nimport Button from \"./button\";\n\nclass Playback extends Component {\n  state = {\n    jobs: [],\n    message: [],\n    text: \"Play\",\n  };\n\n  capture = {\n    jobName: \"\",\n    startTime: 0,\n    endTime: 0,\n  };\n\n  changeText = (text) => {\n    this.setState({ text });\n  };\n\n  async componentDidMount() {\n    const { data: jobs } = await Axios.get(\n      \"http://ec2-54-152-230-158.compute-1.amazonaws.com:7999/api/capture/jobs\"\n    );\n\n    this.setState({ jobs });\n  }\n\n  handleDelete = (job) => {\n    const jobs = this.state.jobs.filter((m) => m._id !== job._id);\n    this.setState({ jobs });\n  };\n\n  render() {\n    const { length: count } = this.state.jobs;\n    const { text } = this.state;\n\n    if (count === 0) return <p>There are no job in the database.</p>;\n\n    return (\n      <React.Fragment>\n        <p className=\"text-primary\">\n          {\" \"}\n          Showing {count} available playback jobs in the database.\n        </p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Job Name</th>\n              <th>Start Date & Time</th>\n              <th>End Date & Time</th>\n              <th>Playback</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.jobs.map((job) => (\n              <tr key={job.jobID}>\n                <td>{job.jobName}</td>\n\n                <Button\n                  id={job.jobName}\n                  label=\"Play\"\n                  text={this.state.text}\n                  jobName={job.jobName}\n                />\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Playback;\n"]},"metadata":{},"sourceType":"module"}