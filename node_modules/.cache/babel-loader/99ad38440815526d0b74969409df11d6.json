{"ast":null,"code":"var _jsxFileName = \"/Users/JV/react/front-end-playback/src/components/chart.jsx\";\nimport React from \"react\";\nimport { Dropdown, Table, Form, Button, Spinner, Row, Col, Alert } from \"react-bootstrap\";\nimport style from \"./chart.css\";\nimport { Line } from \"react-chartjs-2\";\nimport Routes from \"./routes\";\n\nclass TrafficStatistic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let url = Routes.getAllRaw; // let url = 'http://ec2-54-152-230-158.compute-1.amazonaws.com:8000/api/play';\n\n      fetch(url).then(res => {\n        if (res.json) {\n          return res.json().then(json => {\n            return res.ok ? json : Promise.reject(json);\n          });\n        } else {\n          Promise.reject(\"No JSON exist!\");\n        }\n      }).then(result => {\n        console.log(result);\n        this.setState({\n          data: result,\n          error: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      error: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: style.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"My Traffic Statistics\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StatsTable, {\n      data: this.state.data,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StatsChart, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass StatsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRow = (uri, total) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: uri,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, uri), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, total));\n    };\n\n    this.state = {\n      content: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data) {\n      let content = [];\n      let result = getSummarizedData(nextProps.data);\n      result.forEach(res => {\n        content.push(this.handleRow(res.uri, res.total));\n      });\n      this.setState({\n        content: content\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: style.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Traffic Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: style.tableContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, !this.props.error ? /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      variant: \"dark\",\n      className: style.myTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"URI\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Total Requests\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, this.state.content)) : /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      className: style.alertBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Server Not Connected!\"))));\n  }\n\n}\n\nconst lineColors = [\"rgb(237, 41, 58)\", \"rgb(75,192,192)\", \"rgb(230,54,192)\", \"rgb(100, 53, 201)\", \"rgb(33, 133, 208)\"];\nconst options = {\n  responsive: true,\n  scales: {\n    xAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true,\n        labelString: \"Dates\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true,\n        labelString: \"# of Requests\"\n      }\n    }]\n  }\n};\n\nclass StatsChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdate = result => {\n      if (!result) return null;\n      let i = 0; // update data to the line chart\n\n      let lineData = {};\n      lineData.datasets = [];\n      lineData.labels = result.labels;\n      result.data.forEach(uri => {\n        lineData.datasets.push({\n          label: `uri(${uri.name})`,\n          data: uri.traffic,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: lineColors[i],\n          borderColor: lineColors[i],\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: lineColors[i],\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: lineColors[i],\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10\n        });\n        ++i;\n      });\n      this.setState({\n        lineData: lineData\n      });\n    };\n\n    this.state = {\n      lineData: {}\n    };\n  } // handle new request and update the line chart, result param received from StatsChartOptionsBar.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.chartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: style.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, \"Traffic Analysis Chart\"), /*#__PURE__*/React.createElement(StatsChartOptionsBar, {\n      data: this.props.data,\n      lineHandler: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: this.state.lineData,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass StatsChartOptionsBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckBox = event => {\n      if (event.target.id) {\n        let id = event.target.id;\n        let uripart = id.split(\"::\");\n        let uri = uripart[1];\n\n        if (uri && uri !== \"\") {\n          if (event.target.checked === true) {\n            // allow maximum of 5 uris selected.\n            if (this.selectedUri.length >= this.maxSelectedUri) {\n              event.target.checked = false;\n              this.setState({\n                error: true,\n                errorText: \"Only maximum of 5 URIs allowed\"\n              });\n            } else {\n              this.selectedUri.push(uri);\n            }\n          } else {\n            let index = this.selectedUri.indexOf(uri);\n\n            if (index > -1) {\n              this.selectedUri.splice(index, 1);\n            }\n          }\n        }\n      }\n    };\n\n    this.handleFilter = event => {\n      let value = event.target.value.toLowerCase();\n      let visible = this.state.uriListVisible;\n\n      for (let i = 0; i < this.state.uriList.length; ++i) {\n        if (this.state.uriList[i].toLowerCase().indexOf(value) > -1) {\n          visible[i] = true;\n        } else {\n          visible[i] = false;\n        }\n      }\n\n      this.setState({\n        uriListVisible: visible\n      });\n    };\n\n    this.setDate = e => {\n      if (e.target.id === \"start-date\") {\n        this.startDate = e.target.value;\n      } else {\n        this.endDate = e.target.value;\n      }\n    };\n\n    this.handleApply = () => {\n      console.log(this.selectedUri);\n      console.log(this.startDate);\n      console.log(this.endDate);\n\n      if (this.endDate === \"\" || this.startDate === \"\" || this.selectedUri.length === 0) {\n        this.setState({\n          error: true,\n          errorText: \"Some information is empty.\"\n        });\n        return null;\n      }\n\n      if (this.endDate < this.startDate) {\n        this.setState({\n          error: true,\n          errorText: \"Error! End date is greater than start date!\"\n        });\n        return null;\n      }\n\n      this.setState({\n        applyLoading: true\n      });\n      setTimeout(() => {\n        if (this.props.data) {\n          let result = getDataFromTimeRange(this.startDate, this.endDate, this.selectedUri, this.props.data);\n          this.props.lineHandler(result);\n          this.setState({\n            error: false\n          });\n        } else {\n          this.setState({\n            error: true,\n            errorText: \"Internal Error! Database Not Connected!\"\n          });\n        }\n\n        this.setState({\n          applyLoading: false\n        });\n      }, 600);\n    };\n\n    this.handleAlert = () => {\n      this.setState({\n        error: false\n      });\n    };\n\n    this.state = {\n      uriList: [\"/home\", \"/home/uri\", \"/traffic/abc/dsassfcsaaaaaaaaa\", \"/hello\", \"/hi\", \"/abc\"],\n      uriListVisible: [true, true, true, true, true, true],\n      applyLoading: false,\n      error: false,\n      errorText: \"Something wrong!\"\n    };\n    this.maxSelectedUri = 5;\n    this.selectedUri = [];\n    this.startDate = \"\";\n    this.endDate = \"\";\n    this.receivedData = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.receivedData === false) {\n      if (nextProps.data) {\n        let uriList = getUriList(nextProps.data);\n        let num = uriList.length;\n        let visible = [];\n\n        for (let i = 0; i < num; ++i) visible.push(true);\n\n        this.setState({\n          uriList: uriList.sort(),\n          uriListVisible: visible\n        });\n        this.receivedData = true;\n      }\n    }\n  } // record checked checkbox value.\n\n\n  render() {\n    const content = [];\n\n    for (let i = 0; i < this.state.uriList.length; ++i) {\n      let uri = this.state.uriList[i];\n      content.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.uriListVisible[i] ? style.item : style.itemNone,\n        key: uri,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        onChange: this.handleCheckBox,\n        type: \"checkbox\",\n        id: `uri::${uri}`,\n        label: `${uri}`,\n        className: style.checkBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.optionContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"start-date\",\n      className: style.optionLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, \"Start Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      id: \"start-date\",\n      className: style.dateInput,\n      onChange: this.setDate,\n      disabled: this.state.applyLoading ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"end-date\",\n      className: style.optionLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, \"End Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      id: \"end-date\",\n      className: style.dateInput,\n      onChange: this.setDate,\n      disabled: this.state.applyLoading ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"stat-dropdown\",\n      className: style.optionLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, \"Select Uri:\"), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"outline-info\",\n      id: \"stat-dropdown\",\n      disabled: this.state.applyLoading ? true : false,\n      className: style.dropdownBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, \"Select URI\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      className: style.dropdownMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Filter uri ...\",\n      onChange: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }), content))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"apply\",\n      className: style.optionLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, \"Apply Change:\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      id: \"apply\",\n      className: style.applyBtn,\n      onClick: this.handleApply,\n      disabled: this.state.applyLoading ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, this.state.applyLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }) : \"Apply\"))), this.state.error && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      onClose: this.handleAlert,\n      dismissible: true,\n      className: style.alertBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }\n    }, this.state.errorText)));\n  }\n\n} // get a list of different uris from data that fetched from the database.\n\n\nfunction getUriList(data) {\n  let uriList = [];\n\n  if (data) {\n    data.forEach(row => {\n      let uri = row.uri; // uriList acts as set.\n\n      if (uriList.indexOf(uri) === -1) {\n        uriList.push(uri);\n      }\n    });\n  }\n\n  return uriList;\n} // summarize all uris with the total number of requests received so far.\n\n\nfunction getSummarizedData(data) {\n  let resultArray = null;\n\n  if (data) {\n    let result = {};\n    data.forEach(row => {\n      let uri = row.uri;\n\n      if (result[uri]) {\n        result[uri] += 1;\n      } else {\n        result[uri] = 1;\n      }\n    });\n    resultArray = [];\n    Object.keys(result).forEach(uri => {\n      resultArray.push({\n        uri: uri,\n        total: result[uri]\n      });\n    });\n    resultArray.sort((a, b) => {\n      if (a.total < b.total) return 1;\n      if (a.total > b.total) return -1;\n      return 0;\n    });\n    return resultArray;\n  }\n\n  return null;\n} // get total request number on each day for each requested uri from the given time range.\n\n\nfunction getDataFromTimeRange(start, end, requestedUri, data) {\n  if (!data) {\n    return null;\n  }\n\n  let startDateStr = start.toString().split(\"-\").join(\".\");\n  let startDate = new Date(startDateStr);\n  let unixStart = startDate.getTime();\n  let endDateStr = end.toString().split(\"-\").join(\".\");\n  let endDate = new Date(endDateStr);\n  endDate.setDate(endDate.getDate() + 1);\n  let unixEnd = endDate.getTime();\n  let numDays = 0;\n  let result = {};\n  result.data = [];\n  result.labels = [];\n  result.unixTimeLabels = [];\n  let current = new Date(startDateStr);\n\n  while (current <= endDate) {\n    ++numDays;\n    let label = `${current.getMonth() + 1}-${current.getDate()}`;\n    result.labels.push(label);\n    result.unixTimeLabels.push(current.getTime());\n    current.setDate(current.getDate() + 1);\n  }\n\n  numDays -= 1; // console.log('num day == ' + numDays);\n\n  let zeros = [];\n\n  for (let i = 0; i < numDays; ++i) zeros.push(0);\n\n  requestedUri.forEach(uri => {\n    result.data.push({\n      name: uri,\n      traffic: [...zeros]\n    });\n  });\n  let unixTimeRange = result.unixTimeLabels;\n\n  for (let i = 0; i < data.length; ++i) {\n    let unixTime = data[i].utime * 1000;\n\n    if (unixTime < unixStart || unixTime >= unixEnd) {\n      // out of range, skip to next data row.\n      continue;\n    }\n\n    let uri = data[i].uri; // console.log('on i = ' +  i + '  ' + uri);\n\n    for (let j = 0; j < numDays; ++j) {\n      let current = unixTimeRange[j];\n      let next = unixTimeRange[j + 1]; // console.log(`${current} ${unixTime} ${next}`);\n\n      if (unixTime >= current && unixTime < next) {\n        // console.log('match time');\n        for (let k = 0; k < requestedUri.length; ++k) {\n          if (uri === requestedUri[k]) {\n            result.data[k].traffic[j] += 1;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n  }\n\n  result.labels.pop();\n  result.unixTimeLabels.pop();\n  console.log(result);\n  return result;\n}\n\nexport default TrafficStatistic;","map":{"version":3,"sources":["/Users/JV/react/front-end-playback/src/components/chart.jsx"],"names":["React","Dropdown","Table","Form","Button","Spinner","Row","Col","Alert","style","Line","Routes","TrafficStatistic","Component","constructor","props","componentDidMount","url","getAllRaw","fetch","then","res","json","ok","Promise","reject","result","console","log","setState","data","error","catch","err","state","render","title","StatsTable","handleRow","uri","total","textAlign","content","componentWillReceiveProps","nextProps","getSummarizedData","forEach","push","tableContainer","myTable","alertBox","lineColors","options","responsive","scales","xAxes","display","scaleLabel","labelString","yAxes","StatsChart","handleUpdate","i","lineData","datasets","labels","label","name","traffic","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartContainer","StatsChartOptionsBar","handleCheckBox","event","target","id","uripart","split","checked","selectedUri","length","maxSelectedUri","errorText","index","indexOf","splice","handleFilter","value","toLowerCase","visible","uriListVisible","uriList","setDate","e","startDate","endDate","handleApply","applyLoading","setTimeout","getDataFromTimeRange","lineHandler","handleAlert","receivedData","getUriList","num","sort","item","itemNone","checkBox","optionContainer","optionLabel","dateInput","dropdownBtn","dropdownMenu","applyBtn","row","resultArray","Object","keys","a","b","start","end","requestedUri","startDateStr","toString","join","Date","unixStart","getTime","endDateStr","getDate","unixEnd","numDays","unixTimeLabels","current","getMonth","zeros","unixTimeRange","unixTime","utime","j","next","k","pop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Dropdown,\n  Table,\n  Form,\n  Button,\n  Spinner,\n  Row,\n  Col,\n  Alert,\n} from \"react-bootstrap\";\nimport style from \"./chart.css\";\nimport { Line } from \"react-chartjs-2\";\nimport Routes from \"./routes\";\n\nclass TrafficStatistic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      error: false,\n    };\n  }\n\n  componentDidMount = () => {\n    let url = Routes.getAllRaw;\n    // let url = 'http://ec2-54-152-230-158.compute-1.amazonaws.com:8000/api/play';\n    fetch(url)\n      .then((res) => {\n        if (res.json) {\n          return res.json().then((json) => {\n            return res.ok ? json : Promise.reject(json);\n          });\n        } else {\n          Promise.reject(\"No JSON exist!\");\n        }\n      })\n      .then((result) => {\n        console.log(result);\n        this.setState({ data: result, error: false });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ error: true });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className={style.title}>My Traffic Statistics</h1>\n        <hr></hr>\n        <StatsTable data={this.state.data} error={this.state.error} />\n        <StatsChart data={this.state.data} />\n      </div>\n    );\n  }\n}\n\nclass StatsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data) {\n      let content = [];\n      let result = getSummarizedData(nextProps.data);\n      result.forEach((res) => {\n        content.push(this.handleRow(res.uri, res.total));\n      });\n      this.setState({ content: content });\n    }\n  }\n\n  handleRow = (uri, total) => {\n    return (\n      <tr key={uri}>\n        <td>{uri}</td>\n        <td style={{ textAlign: \"center\" }}>{total}</td>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className={style.title}>Traffic Summary</h2>\n        <div className={style.tableContainer}>\n          {!this.props.error ? (\n            <Table\n              striped\n              bordered\n              hover\n              size=\"sm\"\n              variant=\"dark\"\n              className={style.myTable}\n            >\n              <thead>\n                <tr>\n                  <th>URI</th>\n                  <th style={{ textAlign: \"center\" }}>Total Requests</th>\n                </tr>\n              </thead>\n              <tbody>{this.state.content}</tbody>\n            </Table>\n          ) : (\n            <Alert variant=\"danger\" className={style.alertBox}>\n              <Alert.Heading>Error</Alert.Heading>\n              <p>Server Not Connected!</p>\n            </Alert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst lineColors = [\n  \"rgb(237, 41, 58)\",\n  \"rgb(75,192,192)\",\n  \"rgb(230,54,192)\",\n  \"rgb(100, 53, 201)\",\n  \"rgb(33, 133, 208)\",\n];\n\nconst options = {\n  responsive: true,\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Dates\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"# of Requests\",\n        },\n      },\n    ],\n  },\n};\n\nclass StatsChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineData: {},\n    };\n  }\n\n  // handle new request and update the line chart, result param received from StatsChartOptionsBar.\n  handleUpdate = (result) => {\n    if (!result) return null;\n    let i = 0;\n    // update data to the line chart\n    let lineData = {};\n    lineData.datasets = [];\n    lineData.labels = result.labels;\n    result.data.forEach((uri) => {\n      lineData.datasets.push({\n        label: `uri(${uri.name})`,\n        data: uri.traffic,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: lineColors[i],\n        borderColor: lineColors[i],\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: lineColors[i],\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: lineColors[i],\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n      });\n      ++i;\n    });\n    this.setState({ lineData: lineData });\n  };\n\n  render() {\n    return (\n      <div className={style.chartContainer}>\n        <h2 className={style.title}>Traffic Analysis Chart</h2>\n        <StatsChartOptionsBar\n          data={this.props.data}\n          lineHandler={this.handleUpdate}\n        />\n        <hr></hr>\n        <Line data={this.state.lineData} options={options} />\n      </div>\n    );\n  }\n}\n\nclass StatsChartOptionsBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uriList: [\n        \"/home\",\n        \"/home/uri\",\n        \"/traffic/abc/dsassfcsaaaaaaaaa\",\n        \"/hello\",\n        \"/hi\",\n        \"/abc\",\n      ],\n      uriListVisible: [true, true, true, true, true, true],\n      applyLoading: false,\n      error: false,\n      errorText: \"Something wrong!\",\n    };\n    this.maxSelectedUri = 5;\n    this.selectedUri = [];\n    this.startDate = \"\";\n    this.endDate = \"\";\n    this.receivedData = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.receivedData === false) {\n      if (nextProps.data) {\n        let uriList = getUriList(nextProps.data);\n        let num = uriList.length;\n        let visible = [];\n        for (let i = 0; i < num; ++i) visible.push(true);\n        this.setState({\n          uriList: uriList.sort(),\n          uriListVisible: visible,\n        });\n        this.receivedData = true;\n      }\n    }\n  }\n\n  // record checked checkbox value.\n  handleCheckBox = (event) => {\n    if (event.target.id) {\n      let id = event.target.id;\n      let uripart = id.split(\"::\");\n      let uri = uripart[1];\n      if (uri && uri !== \"\") {\n        if (event.target.checked === true) {\n          // allow maximum of 5 uris selected.\n          if (this.selectedUri.length >= this.maxSelectedUri) {\n            event.target.checked = false;\n            this.setState({\n              error: true,\n              errorText: \"Only maximum of 5 URIs allowed\",\n            });\n          } else {\n            this.selectedUri.push(uri);\n          }\n        } else {\n          let index = this.selectedUri.indexOf(uri);\n          if (index > -1) {\n            this.selectedUri.splice(index, 1);\n          }\n        }\n      }\n    }\n  };\n\n  // handle uri filter in the uri dropdown.\n  handleFilter = (event) => {\n    let value = event.target.value.toLowerCase();\n    let visible = this.state.uriListVisible;\n    for (let i = 0; i < this.state.uriList.length; ++i) {\n      if (this.state.uriList[i].toLowerCase().indexOf(value) > -1) {\n        visible[i] = true;\n      } else {\n        visible[i] = false;\n      }\n    }\n    this.setState({ uriListVisible: visible });\n  };\n\n  // set date onchange\n  setDate = (e) => {\n    if (e.target.id === \"start-date\") {\n      this.startDate = e.target.value;\n    } else {\n      this.endDate = e.target.value;\n    }\n  };\n\n  // apply and process custom filters and send result to the line chart.\n  handleApply = () => {\n    console.log(this.selectedUri);\n    console.log(this.startDate);\n    console.log(this.endDate);\n    if (\n      this.endDate === \"\" ||\n      this.startDate === \"\" ||\n      this.selectedUri.length === 0\n    ) {\n      this.setState({\n        error: true,\n        errorText: \"Some information is empty.\",\n      });\n      return null;\n    }\n    if (this.endDate < this.startDate) {\n      this.setState({\n        error: true,\n        errorText: \"Error! End date is greater than start date!\",\n      });\n      return null;\n    }\n    this.setState({ applyLoading: true });\n    setTimeout(() => {\n      if (this.props.data) {\n        let result = getDataFromTimeRange(\n          this.startDate,\n          this.endDate,\n          this.selectedUri,\n          this.props.data\n        );\n        this.props.lineHandler(result);\n        this.setState({ error: false });\n      } else {\n        this.setState({\n          error: true,\n          errorText: \"Internal Error! Database Not Connected!\",\n        });\n      }\n      this.setState({ applyLoading: false });\n    }, 600);\n  };\n\n  handleAlert = () => {\n    this.setState({ error: false });\n  };\n\n  render() {\n    const content = [];\n    for (let i = 0; i < this.state.uriList.length; ++i) {\n      let uri = this.state.uriList[i];\n      content.push(\n        <div\n          className={this.state.uriListVisible[i] ? style.item : style.itemNone}\n          key={uri}\n        >\n          <Form.Check\n            onChange={this.handleCheckBox}\n            type={\"checkbox\"}\n            id={`uri::${uri}`}\n            label={`${uri}`}\n            className={style.checkBox}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className={style.optionContainer}>\n        <Row>\n          <Col sm={12} md={6} lg={3}>\n            <label htmlFor=\"start-date\" className={style.optionLabel}>\n              Start Date:\n            </label>\n            <Form.Control\n              type=\"date\"\n              id=\"start-date\"\n              className={style.dateInput}\n              onChange={this.setDate}\n              disabled={this.state.applyLoading ? true : false}\n            />\n          </Col>\n          <Col sm={12} md={6} lg={3}>\n            <label htmlFor=\"end-date\" className={style.optionLabel}>\n              End Date:\n            </label>\n            <Form.Control\n              type=\"date\"\n              id=\"end-date\"\n              className={style.dateInput}\n              onChange={this.setDate}\n              disabled={this.state.applyLoading ? true : false}\n            />\n          </Col>\n          <Col xs={12} sm={6} lg={3}>\n            <label htmlFor=\"stat-dropdown\" className={style.optionLabel}>\n              Select Uri:\n            </label>\n            <Dropdown>\n              <Dropdown.Toggle\n                variant=\"outline-info\"\n                id=\"stat-dropdown\"\n                disabled={this.state.applyLoading ? true : false}\n                className={style.dropdownBtn}\n              >\n                Select URI\n              </Dropdown.Toggle>\n              <Dropdown.Menu className={style.dropdownMenu}>\n                <div className={style.item}>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Filter uri ...\"\n                    onChange={this.handleFilter}\n                  />\n                </div>\n                <Dropdown.Divider />\n                {content}\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col xs={12} sm={6} lg={3}>\n            <label htmlFor=\"apply\" className={style.optionLabel}>\n              Apply Change:\n            </label>\n            <Button\n              variant=\"info\"\n              id=\"apply\"\n              className={style.applyBtn}\n              onClick={this.handleApply}\n              disabled={this.state.applyLoading ? true : false}\n            >\n              {this.state.applyLoading ? (\n                <Spinner animation=\"grow\" size=\"sm\" />\n              ) : (\n                \"Apply\"\n              )}\n            </Button>\n          </Col>\n        </Row>\n\n        {this.state.error && (\n          <Alert\n            variant=\"danger\"\n            onClose={this.handleAlert}\n            dismissible\n            className={style.alertBox}\n          >\n            <Alert.Heading>Error</Alert.Heading>\n            <p>{this.state.errorText}</p>\n          </Alert>\n        )}\n      </div>\n    );\n  }\n}\n\n// get a list of different uris from data that fetched from the database.\nfunction getUriList(data) {\n  let uriList = [];\n  if (data) {\n    data.forEach((row) => {\n      let uri = row.uri;\n      // uriList acts as set.\n      if (uriList.indexOf(uri) === -1) {\n        uriList.push(uri);\n      }\n    });\n  }\n  return uriList;\n}\n\n// summarize all uris with the total number of requests received so far.\nfunction getSummarizedData(data) {\n  let resultArray = null;\n  if (data) {\n    let result = {};\n    data.forEach((row) => {\n      let uri = row.uri;\n      if (result[uri]) {\n        result[uri] += 1;\n      } else {\n        result[uri] = 1;\n      }\n    });\n    resultArray = [];\n    Object.keys(result).forEach((uri) => {\n      resultArray.push({\n        uri: uri,\n        total: result[uri],\n      });\n    });\n    resultArray.sort((a, b) => {\n      if (a.total < b.total) return 1;\n      if (a.total > b.total) return -1;\n      return 0;\n    });\n    return resultArray;\n  }\n  return null;\n}\n\n// get total request number on each day for each requested uri from the given time range.\nfunction getDataFromTimeRange(start, end, requestedUri, data) {\n  if (!data) {\n    return null;\n  }\n  let startDateStr = start.toString().split(\"-\").join(\".\");\n  let startDate = new Date(startDateStr);\n  let unixStart = startDate.getTime();\n  let endDateStr = end.toString().split(\"-\").join(\".\");\n  let endDate = new Date(endDateStr);\n  endDate.setDate(endDate.getDate() + 1);\n  let unixEnd = endDate.getTime();\n  let numDays = 0;\n\n  let result = {};\n  result.data = [];\n  result.labels = [];\n  result.unixTimeLabels = [];\n\n  let current = new Date(startDateStr);\n  while (current <= endDate) {\n    ++numDays;\n    let label = `${current.getMonth() + 1}-${current.getDate()}`;\n    result.labels.push(label);\n    result.unixTimeLabels.push(current.getTime());\n    current.setDate(current.getDate() + 1);\n  }\n  numDays -= 1;\n  // console.log('num day == ' + numDays);\n\n  let zeros = [];\n  for (let i = 0; i < numDays; ++i) zeros.push(0);\n\n  requestedUri.forEach((uri) => {\n    result.data.push({\n      name: uri,\n      traffic: [...zeros],\n    });\n  });\n\n  let unixTimeRange = result.unixTimeLabels;\n\n  for (let i = 0; i < data.length; ++i) {\n    let unixTime = data[i].utime * 1000;\n    if (unixTime < unixStart || unixTime >= unixEnd) {\n      // out of range, skip to next data row.\n      continue;\n    }\n\n    let uri = data[i].uri;\n    // console.log('on i = ' +  i + '  ' + uri);\n    for (let j = 0; j < numDays; ++j) {\n      let current = unixTimeRange[j];\n      let next = unixTimeRange[j + 1];\n      // console.log(`${current} ${unixTime} ${next}`);\n      if (unixTime >= current && unixTime < next) {\n        // console.log('match time');\n        for (let k = 0; k < requestedUri.length; ++k) {\n          if (uri === requestedUri[k]) {\n            result.data[k].traffic[j] += 1;\n            break;\n          }\n        }\n        break;\n      }\n    }\n  }\n  result.labels.pop();\n  result.unixTimeLabels.pop();\n  console.log(result);\n  return result;\n}\n\nexport default TrafficStatistic;\n"]},"metadata":{},"sourceType":"module"}